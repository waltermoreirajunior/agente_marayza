import React, { useState, useEffect, useRef } from 'react';
import { Send, Bot, User, Clock, Calendar, Phone } from 'lucide-react';

const ChatBot = () => {
  const [messages, setMessages] = useState([
    {
      id: 1,
      text: "Ol√°! Bem-vindo(a) √† Marayza Pires Pilates e Fisioterapia! üòä Como podemos ajud√°-lo(a) hoje?",
      isBot: true,
      timestamp: new Date()
    }
  ]);
  const [inputText, setInputText] = useState('');
  const [isTyping, setIsTyping] = useState(false);
  const messagesEndRef = useRef(null);

  const services = {
    'fisioterapia ortop√©dica': {
      name: 'Fisioterapia Ortop√©dica',
      description: 'Tratamento especializado para les√µes musculoesquel√©ticas, dores nas costas, articula√ß√µes e reabilita√ß√£o p√≥s-cir√∫rgica.',
      duration: '50 minutos',
      price: 'Consulte valores'
    },
    'fisioterapia p√©lvica': {
      name: 'Fisioterapia P√©lvica e Obst√©trica',
      description: 'Especializada em sa√∫de da mulher, prepara√ß√£o para o parto, p√≥s-parto e disfun√ß√µes do assoalho p√©lvico.',
      duration: '50 minutos',
      price: 'Consulte valores'
    },
    'laser-terapia': {
      name: 'Laser-terapia',
      description: 'Tratamento com laser para al√≠vio da dor, cicatriza√ß√£o e regenera√ß√£o de tecidos.',
      duration: '30 minutos',
      price: 'Consulte valores'
    },
    'pilates solo': {
      name: 'Pilates Solo',
      description: 'Exerc√≠cios de pilates no solo para fortalecimento, flexibilidade e consci√™ncia corporal.',
      duration: '60 minutos',
      price: 'Consulte valores'
    },
    'pilates tradicional': {
      name: 'Pilates Tradicional',
      description: 'Pilates com equipamentos tradicionais para reabilita√ß√£o e condicionamento f√≠sico.',
      duration: '50 minutos',
      price: 'Consulte valores'
    },
    'pilates acrob√°tico': {
      name: 'Pilates Acrob√°tico',
      description: 'Modalidade avan√ßada que combina pilates com movimentos acrob√°ticos suspensos.',
      duration: '60 minutos',
      price: 'Consulte valores'
    }
  };

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  };

  useEffect(scrollToBottom, [messages]);

  const generateBotResponse = (userMessage) => {
    const message = userMessage.toLowerCase();
    
    // Sauda√ß√µes
    if (message.includes('ol√°') || message.includes('oi') || message.includes('bom dia') || message.includes('boa tarde')) {
      return "Ol√°! √â um prazer falar com voc√™! Como posso ajud√°-lo(a) hoje? Posso fornecer informa√ß√µes sobre nossos servi√ßos, hor√°rios ou ajudar com agendamentos.";
    }
    
    // Servi√ßos espec√≠ficos
    for (const [key, service] of Object.entries(services)) {
      if (message.includes(key) || message.includes(key.replace('-', ''))) {
        return `üìç **${service.name}**\n\n${service.description}\n\n‚è∞ Dura√ß√£o: ${service.duration}\nüí∞ Valor: ${service.price}\n\nGostaria de agendar uma consulta ou precisa de mais informa√ß√µes?`;
      }
    }
    
    // Lista de servi√ßos
    if (message.includes('servi√ßos') || message.includes('tratamentos') || message.includes('o que voc√™s fazem')) {
      return `üè• **Nossos Servi√ßos:**\n\n‚Ä¢ Fisioterapia Ortop√©dica\n‚Ä¢ Fisioterapia P√©lvica e Obst√©trica\n‚Ä¢ Laser-terapia\n‚Ä¢ Pilates Solo\n‚Ä¢ Pilates Tradicional\n‚Ä¢ Pilates Acrob√°tico\n\nSobre qual servi√ßo gostaria de saber mais?`;
    }
    
    // Agendamento
    if (message.includes('agendar') || message.includes('marcar') || message.includes('consulta') || message.includes('hor√°rio')) {
      return `üìÖ **Agendamento**\n\nFico feliz em ajudar com seu agendamento! \n\nPara agendar, voc√™ pode:\n‚Ä¢ Ligar para (XX) XXXX-XXXX\n‚Ä¢ WhatsApp: (XX) XXXXX-XXXX\n‚Ä¢ Ou me diga qual servi√ßo deseja e em qual per√≠odo prefere, que posso verificar a disponibilidade!\n\nQual servi√ßo gostaria de agendar?`;
    }
    
    // Valores/Pre√ßos
    if (message.includes('valor') || message.includes('pre√ßo') || message.includes('quanto custa')) {
      return `üí∞ **Valores**\n\nNossos valores variam de acordo com o tratamento escolhido. Para informa√ß√µes precisas sobre valores e poss√≠veis conv√™nios aceitos, por favor:\n\nüìû Ligue: (XX) XXXX-XXXX\nüí¨ WhatsApp: (XX) XXXXX-XXXX\n\nTeremos prazer em esclarecer todos os detalhes!`;
    }
    
    // Hor√°rio de funcionamento
    if (message.includes('hor√°rio') || message.includes('funcionamento') || message.includes('aberto')) {
      return `üïê **Hor√°rio de Funcionamento**\n\n‚Ä¢ Segunda e Quarta de 07:00h √†s 11:00h e de 14:00h √†s 20:00h\n‚Ä¢ Ter√ßa e Quinta de 06:00h √†s 10:00h e de 14:00h √†s 20:00h\n\nüìç Estamos sempre prontos para atend√™-lo(a)!`;
    }
    
    // Localiza√ß√£o
    if (message.includes('endere√ßo') || message.includes('localiza√ß√£o') || message.includes('onde fica')) {
      return `üìç **Localiza√ß√£o**\n\nAv Geraldo Em√≠dio Carneiro, N¬∫ 1 - Centro\nIpameri - Goi√°s\nCEP: 75780-000\n\nPrecisa de mais orienta√ß√µes para chegar at√© aqui?`;
    }
    
    // Despedida
    if (message.includes('tchau') || message.includes('obrigado') || message.includes('obrigada')) {
      return "Foi um prazer ajud√°-lo(a)! üòä Estamos sempre aqui quando precisar. Tenha um √≥timo dia e esperamos v√™-lo(a) em breve aqui no Studio!";
    }
    
    // Resposta padr√£o
    return `Entendi! Como um rob√¥, estou aprendendo e melhorando para aprimorar nossa experi√™ncia de atendimento. Para melhor atend√™-lo(a), posso ajudar com:\n\n‚Ä¢ Informa√ß√µes sobre nossos servi√ßos\n‚Ä¢ Agendamentos\n‚Ä¢ Hor√°rios de funcionamento\n‚Ä¢ Localiza√ß√£o\n‚Ä¢ Valores\n\nOu se preferir, pode entrar em contato diretamente:\nüìû (64) 99259-2411\nüí¨ WhatsApp: (64) 9XXXX-XXXX\n\nComo posso ajudar?`;
  };

  const handleSendMessage = () => {
    if (!inputText.trim()) return;

    const newUserMessage = {
      id: messages.length + 1,
      text: inputText,
      isBot: false,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, newUserMessage]);
    setInputText('');
    setIsTyping(true);

    // Simula delay de digita√ß√£o do bot
    setTimeout(() => {
      const botResponse = {
        id: messages.length + 2,
        text: generateBotResponse(inputText),
        isBot: true,
        timestamp: new Date()
      };
      
      setMessages(prev => [...prev, botResponse]);
      setIsTyping(false);
    }, 1500);
  };

  const handleKeyPress = (e) => {
    if (e.key === 'Enter') {
      handleSendMessage();
    }
  };

  const formatTime = (date) => {
    return date.toLocaleTimeString('pt-BR', { 
      hour: '2-digit', 
      minute: '2-digit' 
    });
  };

  const QuickButtons = () => {
    const quickOptions = [
      'Ver servi√ßos',
      'Agendar consulta',
      'Hor√°rio de funcionamento',
      'Localiza√ß√£o'
    ];

    return (
      <div className="flex flex-wrap gap-2 p-4 bg-gray-50">
        {quickOptions.map((option, index) => (
          <button
            key={index}
            onClick={() => {
              setInputText(option);
              setTimeout(() => handleSendMessage(), 100);
            }}
            className="px-3 py-2 bg-blue-100 text-blue-700 rounded-full text-sm hover:bg-blue-200 transition-colors"
          >
            {option}
          </button>
        ))}
      </div>
    );
  };

  return (
    <div className="max-w-4xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden">
      {/* Header */}
      <div className="bg-gradient-to-r from-blue-600 to-blue-800 text-white p-4">
        <div className="flex items-center gap-3">
          <div className="w-12 h-12 bg-white bg-opacity-20 rounded-full flex items-center justify-center">
            <Bot size={24} />
          </div>
          <div>
            <h1 className="text-xl font-bold">Assistente Virtual</h1>
            <p className="text-blue-100">Marayza Pires Pilates e Fisioterapia</p>
          </div>
        </div>
      </div>

      {/* Quick Info */}
      <div className="bg-blue-50 p-4 border-b">
        <div className="flex flex-wrap gap-6 text-sm text-blue-800">
          <div className="flex items-center gap-2">
            <Clock size={16} />
            <span>Seg-Sex: 7h-19h | S√°b: 8h-12h</span>
          </div>
          <div className="flex items-center gap-2">
            <Phone size={16} />
            <span>(XX) XXXX-XXXX</span>
          </div>
          <div className="flex items-center gap-2">
            <Calendar size={16} />
            <span>Agendamento online dispon√≠vel</span>
          </div>
        </div>
      </div>

      {/* Messages */}
      <div className="h-96 overflow-y-auto p-4 space-y-4">
        {messages.map((message) => (
          <div
            key={message.id}
            className={`flex gap-3 ${message.isBot ? 'justify-start' : 'justify-end'}`}
          >
            {message.isBot && (
              <div className="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center flex-shrink-0">
                <Bot size={16} className="text-white" />
              </div>
            )}
            
            <div
              className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${
                message.isBot
                  ? 'bg-gray-100 text-gray-800'
                  : 'bg-blue-600 text-white'
              }`}
            >
              <div className="whitespace-pre-wrap">{message.text}</div>
              <div className={`text-xs mt-1 ${
                message.isBot ? 'text-gray-500' : 'text-blue-100'
              }`}>
                {formatTime(message.timestamp)}
              </div>
            </div>
            
            {!message.isBot && (
              <div className="w-8 h-8 bg-green-600 rounded-full flex items-center justify-center flex-shrink-0">
                <User size={16} className="text-white" />
              </div>
            )}
          </div>
        ))}
        
        {isTyping && (
          <div className="flex gap-3 justify-start">
            <div className="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center flex-shrink-0">
              <Bot size={16} className="text-white" />
            </div>
            <div className="bg-gray-100 px-4 py-2 rounded-lg">
              <div className="flex space-x-1">
                <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce"></div>
                <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{animationDelay: '0.1s'}}></div>
                <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{animationDelay: '0.2s'}}></div>
              </div>
            </div>
          </div>
        )}
        <div ref={messagesEndRef} />
      </div>

      {/* Quick Buttons */}
      <QuickButtons />

      {/* Input */}
      <div className="border-t p-4">
        <div className="flex gap-2">
          <input
            type="text"
            value={inputText}
            onChange={(e) => setInputText(e.target.value)}
            onKeyPress={handleKeyPress}
            placeholder="Digite sua mensagem..."
            className="flex-1 px-4 py-2 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-blue-500"
          />
          <button
            onClick={handleSendMessage}
            disabled={!inputText.trim()}
            className="px-6 py-2 bg-blue-600 text-white rounded-full hover:bg-blue-700 disabled:bg-gray-400 transition-colors flex items-center gap-2"
          >
            <Send size={16} />
            Enviar
          </button>
        </div>
        <p className="text-xs text-gray-500 mt-2 text-center">
          Para emerg√™ncias, ligue diretamente: (64) XXXX-XXXX
        </p>
      </div>
    </div>
  );
};

export default ChatBot;
